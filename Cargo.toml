[workspace.package]
version = "0.3.0"
authors = ["BlondeBurrito"]
edition = "2024"
rust-version = "1.89"
readme = "README.md"
license = "MIT OR Apache-2.0"
homepage = "https://github.com/BlondeBurrito/voronoi_mosaic"
repository = "https://github.com/BlondeBurrito/voronoi_mosaic"
keywords = ["tessellation", "triangulation", "bevy"]
categories = ["game-development", "algorithms"]
exclude = [".github/", "crates/", "assets/", "docs/png/", "justfile"]

[workspace]
members = ["crates/*"]

[workspace.lints.rust]
missing_docs = "deny"
unexpected_cfgs = { level = "allow", check-cfg = ['cfg(tarpaulin_include)'] }

[workspace.lints.clippy]
cargo_common_metadata = "deny"
missing_docs_in_private_items = "deny"
todo = "deny"
unimplemented = "warn"

# Centralised way of managing versions across all crates and packages
[workspace.dependencies]
bevy = { version = "0.16", default-features = false, features = ["bevy_log"]}

[package]
name = "voronoi_mosaic"
version.workspace = true
authors.workspace = true
edition.workspace = true
rust-version.workspace = true
description = "Bevy mesh generation from Delaunay Triangulation and Voronoi Tessellation"
readme.workspace = true
license.workspace = true
homepage.workspace = true
repository.workspace = true
keywords.workspace = true
categories.workspace = true
exclude.workspace = true
publish = true

[lints]
workspace = true

[dev-dependencies]
criterion = "0.7"
bevy = { workspace = true, default-features = true }
rand = "0.9"
rand_chacha = { version = "0.9" }
# examples_utils = { path = "crates/examples_utils" }

[dependencies]
bevy = { workspace = true, default-features = false, features = ["bevy_render", "bevy_asset"] }

[features]
default = []
2d = []
3d =[]

[package.metadata.docs.rs]
features = ["2d", "3d"]

[profile.dev]
opt-level = 1

[profile.flamegraph]
inherits = "release"
debug = true
strip = false

[profile.codecov]
inherits = "release"
strip = false

[profile.release]
codegen-units = 1
strip = true # strip symbols to reduce binary size on linux and mac

###################
[[bench]]
name = "2d_delaunay"
harness = false
[[bench]]
name = "2d_voronoi"
harness = false
[[bench]]
name = "2d_voronoi_clipped"
harness = false
[[bench]]
name = "2d_meshes"
harness = false
[[bench]]
name = "3d_delaunay"
harness = false
[[bench]]
name = "3d_voronoi"
harness = false
[[bench]]
name = "3d_voronoi_clipped"
harness = false
[[bench]]
name = "3d_meshes"
harness = false
###################

[[example]]
name = "2d_delaunay"
path = "examples/2d/2d_delaunay.rs"
required-features = ["2d"]

[[example]]
name = "2d_voronoi"
path = "examples/2d/2d_voronoi.rs"
required-features = ["2d"]

[[example]]
name = "2d_meshes"
path = "examples/2d/2d_meshes.rs"
required-features = ["2d"]

[[example]]
name = "2d_meshes_clipped"
path = "examples/2d/2d_meshes_clipped.rs"
required-features = ["2d"]

[[example]]
name = "2d_seeded_rand"
path = "examples/2d/2d_seeded_rand.rs"
required-features = ["2d"]

[[example]]
name = "3d_delaunay"
path = "examples/3d/3d_delaunay.rs"
required-features = ["3d"]

[[example]]
name = "3d_voronoi"
path = "examples/3d/3d_voronoi.rs"
required-features = ["3d"]

[[example]]
name = "3d_meshes"
path = "examples/3d/3d_meshes.rs"
required-features = ["3d"]

[[example]]
name = "3d_meshes_clipped"
path = "examples/3d/3d_meshes_clipped.rs"
required-features = ["3d"]
